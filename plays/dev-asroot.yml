---

- name: Setup dev env (root tasks)
  hosts: localhost

  tasks:
    - name: Set useful shell aliases
      lineinfile:
        dest: /etc/profile.d/fx-dev.sh
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        owner: root
        state: present
        insertafter: EOF
        create: true
      loop:
        - { regexp: "alias docker-build=",  line: "alias docker-build='docker build -t $(cat .dockertag):latest .'"}
        - { regexp: "alias docker-push=",  line: "alias docker-push='docker push $(cat .dockertag)'"}
        - { regexp: "alias docker-publish=",  line: "alias docker-publish='docker-build && docker-push'"}
#        - { regexp: "alias docker-images-pull-all=",  line: "alias docker-images-pull-all='for i in $(docker images --filter dangling=false --format \"{{.Repository}}\"); do printf \"\\n\\u001b[34mPulling ${i}\\033[0m\\n" && docker pull $i; done'"}
        - { regexp: "function docker-update-container-runlike {",  line: "function docker-update-container-runlike { RUN=$(docker run -v /var/run/docker.sock:/var/run/docker.sock:ro assaflavie/runlike -p $1) && docker rm -f $1 && sh -c \"$RUN\"; }"}
        # This produces an incorrect function, use docker-update-container-runlike instead (but note this method is actually cooler because it just uses docker itself and does not depend on an additional image and it works if run manually) - { regexp: "function docker-update-container-template {",  line: 'function docker-update-container-template { RUN=$(docker inspect -f "(<~/src/home/docker/run.tpl)" $1) && docker rm -f $1 && sh -c "$RUN"; }'}
        - { regexp: "export PATH=",  line: "export PATH=$PATH:~/src/home/bin"}
